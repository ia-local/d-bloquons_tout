// Fichier : serveur.js (CORRIG√â - Montage GEE dans l'app)

const { app, startAppSetup } = require('./app.js'); 
const { authenticateEarthEngine, geeRouter } = require('./services/gee.js'); // üõë IMPORTATION DE geeRouter
const { PORT, GROQ_API_KEY } = require('./config/index.js');
const telegramBot = require('./routes/telegramRouter.js'); 
const mapLeaflet = require('./config/leaflet.js'); 
const { loadActionsData } = require('./services/data.js'); 
const aiRouter = require('./routes/aiRouter.js'); 
// --- Fonction d'initialisation (Bootstrap) ---

async function bootstrap() {
    try {
        // 1. Authentification Earth Engine (Premi√®re √©tape critique)
        await authenticateEarthEngine();
        console.log('üåç Earth Engine authentifi√© et initialis√©.');
        
        // üõë MONTAGE DE LA ROUTE GEE (Si le montage n'est pas fait dans app.js)
        app.use('/api/gee', geeRouter); // Assurez-vous que votre objet 'app' est bien Express
        console.log('üåê Route Google Earth Engine (/api/gee) mont√©e.');

        // 2. Chargement des donn√©es (Base de donn√©es, Actions, Embeddings)
        await startAppSetup(); 
        
        // 3. Lancement du Bot
        telegramBot.launch();
        console.log('ü§ñ Bot Telegram d√©marr√©.');
        
        // 4. Lancement du Serveur Express
        app.listen(PORT, () => {
            console.log(`üåê Serveur d'enqu√™te parlementaire d√©marr√© sur http://localhost:${PORT}`);
            console.log(`üìö Documentation API Swagger UI disponible sur http://localhost:${PORT}/api-docs`);
            
            if (!GROQ_API_KEY) {
                console.warn("‚ö†Ô∏è AVERTISSEMENT: La variable GROQ_API_KEY n'est pas d√©finie. Les appels Groq √©choueront.");
            }
        });
        
    } catch (err) {
        console.error('ERREUR FATALE AU D√âMARRAGE DU SERVEUR :', err.message);
        if (err.message.includes("GEE Private Key n'a pas √©t√© charg√©e")) {
             console.error("Veuillez v√©rifier le fichier private-key.json.");
        }
        process.exit(1); 
    }
}

bootstrap();